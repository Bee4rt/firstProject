{"ast":null,"code":"var _jsxFileName = \"/Users/bee4rt/Desktop/reactProject/first-project/src/components/Tasklist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskCard from \"./TaskCard\";\nimport BoxCard from \"./boxCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Tasklist() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 123,\n    name: \"Learn React Js\",\n    completed: true\n  }, {\n    id: 456,\n    name: \"Learn React Native\",\n    completed: false\n  }, {\n    id: 789,\n    name: \"Learn Vue Js\",\n    completed: false\n  }]);\n  const [show, setShow] = useState(true);\n  function handleDelete(id) {\n    setTasks(tasks.filter(task => task.id !== id));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Title\",\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"trigger\",\n        onClick: () => setShow(!show),\n        children: \"Toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), show && tasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n        task: task,\n        handleDelete: handleDelete\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoxCard, {\n      result: \"success\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: \"Lorem Ipsum is simply dummy text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Tasklist, \"ymReSoE+bUAm714pPnW4ui7wHRc=\");\n_c = Tasklist;\nexport default Tasklist;\nvar _c;\n$RefreshReg$(_c, \"Tasklist\");","map":{"version":3,"names":["React","useState","TaskCard","BoxCard","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasklist","_s","tasks","setTasks","id","name","completed","show","setShow","handleDelete","filter","task","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","result","_c","$RefreshReg$"],"sources":["/Users/bee4rt/Desktop/reactProject/first-project/src/components/Tasklist.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TaskCard from \"./TaskCard\";\nimport BoxCard from \"./boxCard\";\n\nfunction Tasklist() {\n  const [tasks, setTasks] = useState([\n    { id: 123, name: \"Learn React Js\", completed: true },\n    { id: 456, name: \"Learn React Native\", completed: false },\n    { id: 789, name: \"Learn Vue Js\", completed: false },\n  ]);\n\n  const [show, setShow] = useState(true);\n\n  function handleDelete(id) {\n    setTasks(tasks.filter((task) => task.id !== id));\n  }\n  return (\n    <>\n      <h1 className=\"Title\">Task List</h1>\n      <ul>\n        <button className=\"trigger\" onClick={() => setShow(!show)}>\n          Toggle\n        </button>\n        {show &&\n          tasks.map((task) => (\n            <TaskCard key={task.id} task={task} handleDelete={handleDelete} />\n          ))}\n      </ul>\n\n      <BoxCard result=\"success\">\n        <p className=\"title\">Lorem Ipsum is simply dummy text</p>\n        <p className=\"description\">\n          It is a long established fact that a reader will be distracted by the\n          readable content of a page when looking at its layout.\n        </p>\n      </BoxCard>\n    </>\n  );\n}\n\nexport default Tasklist;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CACjC;IAAEW,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,SAAS,EAAE;EAAK,CAAC,EACpD;IAAEF,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE,oBAAoB;IAAEC,SAAS,EAAE;EAAM,CAAC,EACzD;IAAEF,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE,cAAc;IAAEC,SAAS,EAAE;EAAM,CAAC,CACpD,CAAC;EAEF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEtC,SAASgB,YAAYA,CAACL,EAAE,EAAE;IACxBD,QAAQ,CAACD,KAAK,CAACQ,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACP,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD;EACA,oBACEP,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA;MAAIgB,SAAS,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCpB,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAQgB,SAAS,EAAC,SAAS;QAACK,OAAO,EAAEA,CAAA,KAAMV,OAAO,CAAC,CAACD,IAAI,CAAE;QAAAK,QAAA,EAAC;MAE3D;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRV,IAAI,IACHL,KAAK,CAACiB,GAAG,CAAER,IAAI,iBACbd,OAAA,CAACH,QAAQ;QAAeiB,IAAI,EAAEA,IAAK;QAACF,YAAY,EAAEA;MAAa,GAAhDE,IAAI,CAACP,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2C,CAClE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAELpB,OAAA,CAACF,OAAO;MAACyB,MAAM,EAAC,SAAS;MAAAR,QAAA,gBACvBf,OAAA;QAAGgB,SAAS,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAgC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACzDpB,OAAA;QAAGgB,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAC;MAG3B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACV,CAAC;AAEP;AAAChB,EAAA,CAlCQD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAoCjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}